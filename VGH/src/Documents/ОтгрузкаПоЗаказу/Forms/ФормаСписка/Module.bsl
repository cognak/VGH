&НаКлиенте
Процедура СозданиеТТН(Команда)
	//Запрос на создание ТТН Новой почты POST 
	//           https://dev.ants.co.ua/api/rest/ttn
	//[ { "order": "1000232221" } ]
	текДокумент=Элементы.СписокОтгрузок.ТекущиеДанные;
	мorder=текДокумент.order;
	ПараметрыЗапроса=Новый Структура("order,key",мorder);
	вхПараметры=Новый Структура("ИмяМетода,ПараметрыЗапроса","ttn",ПараметрыЗапроса);
	//структура ответа. Собственна нужна для формирования ответа
	СтруктураОтвет = Новый Структура("ДанныеОтвета,Отработало,ТекстОшибки,КодОтвета","",Истина,"",200);
	вгхОбщийПроцедурыФункцииСервер.ПолучитьРезультатНаСервере("POST",вхПараметры ,СтруктураОтвет);
	Если СтруктураОтвет.Отработало Тогда
		ДанныеОтвета=СтруктураОтвет.ДанныеОтвета;
		Если ДанныеОтвета.success[0].status="OK" Тогда
			//вернем номер созданной накладной
			НомерНакладной=ДанныеОтвета.success[0].np_number;
			//Запишем в документ номер накладной
			вгхОбщийПроцедурыФункцииСервер.СохранимПолученныйНомерВДокументе(Элементы.СписокОтгрузок.ТекущаяСтрока,НомерНакладной);
			Элементы.СписокОтгрузок.Обновить();
		Иначе
			текстОшибки=СтруктураОтвет.ДанныеОтвета.info.message;
			А = Новый Массив();
			А.Добавить("Ошибка: ");
			А.Добавить(Новый ФорматированнаяСтрока(
			    текстОшибки,
			    Новый Шрифт(,,Истина)));
			Стр = Новый ФорматированнаяСтрока(А);
			ПоказатьПредупреждение(,стр);
		КонецЕсли;
	Иначе
		А = Новый Массив();
		А.Добавить("Ошибка: ");
		А.Добавить(Новый ФорматированнаяСтрока(
		    СтруктураОтвет.ТекстОшибки,
		    Новый Шрифт(,,Истина)));
		Стр = Новый ФорматированнаяСтрока(А);
		ПоказатьПредупреждение(,стр);
	КонецЕсли; 
	//Если накладная создается успешно в ответе приходит номер ТТН
	//{
	//    "status": "OK",
	//    "info": {
	//        "message": ""
	//    },
	//    "result": { 
	//      “np_number”: 7878123187123412
	//    }
	//}
КонецПроцедуры
&НаКлиенте
Процедура ПечатьЯрлыка(Команда)
	//Запрос на печать стикера Новой Почты POST 
	//https://dev.ants.co.ua/api/rest/print
	//         {
	//            "order": "100925835",
	//            "type": "sticker",
	//            "key": "9a23a849787bb1388b8b8fa23f3aa789"
	//        }
	
	текДокумент=Элементы.СписокОтгрузок.ТекущиеДанные;
	мorder=текДокумент.order;
	ПараметрыЗапроса=Новый Структура("order,type,key",мorder,"sticker");
	вхПараметры=Новый Структура("ИмяМетода,ПараметрыЗапроса","print",ПараметрыЗапроса);
	СтруктураОтвет = Новый Структура("ДанныеОтвета,Отработало,ТекстОшибки,КодОтвета","",Истина,"",200);
	вгхОбщийПроцедурыФункцииСервер.ПолучитьРезультатНаСервере("POST",вхПараметры ,СтруктураОтвет);
	Если СтруктураОтвет.Отработало Тогда
		Результат=СтруктураОтвет.ДанныеОтвета;
		Если Результат.Свойство("error") Тогда
			ТекстОшибки=Результат.error[0].info.message;
			ПоказатьПредупреждение(,ТекстОшибки,);
			Возврат;
		иначе
			Если Результат.Свойство("success") и Результат.success[0].status="OK" Тогда
				//Если Результат.success[0].status="OK" Тогда
				//в зависимости от содержания печатаем документ
				СсылкаНаДокументПечати=СтруктураОтвет.ДанныеОтвета.success[0].doc;
				Сообщить(СсылкаНаДокументПечати);
				врФайлПечатнойФормы=вгхОбщийПроцедурыФункцииСервер.ПолучитьФайлССервера(СсылкаНаДокументПечати);
				мфайл0 = Новый Файл(СсылкаНаДокументПечати);
				
				мфайл = Новый Файл(врФайлПечатнойФормы);
				ДанныеФайла=Новый ДвоичныеДанные(мфайл.ПолноеИмя);
				//Shell = Новый COMОбъект("Shell.Application");
				//Shell.ShellExecute(ИмяОткрываемогоФайла, "", "", "print", 1);
				//Shell.ShellExecute(мфайл.ПолноеИмя, "", "", "print", 1);
				//Shell.ShellExecute(врФайлПечатнойФормы, "", "", "print", 0);
				ИмяПринтераПоУмол ="Зебра";
				WshShell = новый COMОбъект("WScript.Shell");
				WshShell.Run("""C:\Program Files (x86)\Foxit Software\Foxit Reader\FoxitReader.exe"" /t "+мфайл.ПолноеИмя+" "+ИмяПринтераПоУмол+"", 1);
				// Параметры:
//  ОбработчикРезультата - ОписаниеОповещения, Неопределено - Описание процедуры, принимающей результат работы метода.
//  ДанныеФайла  - структура с данными файла.
//  ПолноеИмяФайла - Строка - здесь возвращается полное имя файла.
//  ИдентификаторФормы - уникальный идентификатор формы.
//
// Возвращаемое значение:
//   Структура - Результат получения файла.
//       * ФайлПолучен - Булево - Успешно ли выполнена операция.
//       * ПолноеИмяФайла - Строка - Полное имя файла.
//ПараметрыВыполнения=Новый Структура();
//Обработчик = Новый ОписаниеОповещения("НапечататьФайлПослеПолученияВерсииВРабочийКаталог", ЭтотОбъект, ПараметрыВыполнения);

//РаботаСФайламиСлужебныйКлиент.ПолучитьФайлВерсииВРабочийКаталог(
//				РаботаСФайламиКлиент.НапечататьФайлы(мфайл, ЭтотОбъект.УникальныйИдентификатор);
				//ЗапуститьПриложение(СсылкаНаДокументПечати );
				//Напечатать Файл
				Сообщить("Печать");
			Иначе
				текстОшибки=СтруктураОтвет.ДанныеОтвета.info.message;
				А = Новый Массив();
				А.Добавить("Ошибка: ");
				А.Добавить(Новый ФорматированнаяСтрока(
				текстОшибки,
				Новый Шрифт(,,Истина)));
				Стр = Новый ФорматированнаяСтрока(А);
				ПоказатьПредупреждение(,стр);
			КонецЕсли;
		КонецЕсли;
	Иначе
		А = Новый Массив();
		А.Добавить("Ошибка: ");
		А.Добавить(Новый ФорматированнаяСтрока(
		СтруктураОтвет.ТекстОшибки,
		Новый Шрифт(,,Истина)));
		Стр = Новый ФорматированнаяСтрока(А);
		ПоказатьПредупреждение(,стр);
	КонецЕсли; 
			//Напечатать Файл
//ProgID = "AcroExch.AVDoc";
//    
//КомОбъект = Новый COMОбъект(ProgID);
//КомОбъект.Open(ФайлПечатнойФормы, "");
//КомОбъект.PrintPages(0, КомОбъект.GetPDDoc().GetNumPages()-1, 3, Истина, Ложь);
//КомОбъект.Close(1);			//Напечатать Файл
	
КонецПроцедуры


&НаКлиенте
Процедура ПечатьТТН(Команда)
	//Запрос на печать ТТН новой почты и накладной Новой Почты POST  
	//https://dev.ants.co.ua/api/rest/print
	//         {
	//            "order": "100925835",
	//            "type": "docs",
	//            "key": "9a23a849787bb1388b8b8fa23f3aa789"
	//        }
	
	СтруктураОтвет = Новый Структура("ДанныеОтвета,Отработало,ТекстОшибки,КодОтвета","",Истина,"",200);	
	
	текДокумент=Элементы.СписокОтгрузок.ТекущиеДанные;
	мorder=текДокумент.order;
	ПараметрыЗапроса=Новый Структура("order,type,key",мorder,"docs");
	вхПараметры=Новый Структура("ИмяМетода,ПараметрыЗапроса","print",ПараметрыЗапроса);
	Результат=Неопределено;
	вгхОбщийПроцедурыФункцииСервер.ПолучитьРезультатНаСервере("POST",вхПараметры ,СтруктураОтвет);
	Если СтруктураОтвет.Отработало Тогда
		Результат=СтруктураОтвет.ДанныеОтвета;
		Если Результат.Свойство("error") тогда
			ТекстОшибки=Результат.error[0].info.message;
			ПоказатьПредупреждение(,ТекстОшибки,);
			Возврат;
		КонецЕсли;
		Если Результат.Свойство("success") тогда
			
			Если Результат.success[0].status="OK" Тогда
				//в зависимости от содержания печатаем документ
				СсылкаНаДокументПечати=СтруктураОтвет.ДанныеОтвета.success[0].doc;
				
				ФайлПечатнойФормы=вгхОбщийПроцедурыФункцииСервер.ПолучитьФайлССервера(СсылкаНаДокументПечати);
				РаботаСФайламиКлиент.НапечататьФайлы(ФайлПечатнойФормы, ЭтотОбъект.УникальныйИдентификатор);
				
				//ЗапуститьПриложение(СсылкаНаДокументПечати );
				////печать образа документа
				Сообщить("Печать");
			Иначе
				текстОшибки=СтруктураОтвет.ДанныеОтвета.info.message;
				А = Новый Массив();
				А.Добавить("Ошибка: ");
				А.Добавить(Новый ФорматированнаяСтрока(
				текстОшибки,
				Новый Шрифт(,,Истина)));
				Стр = Новый ФорматированнаяСтрока(А);
				ПоказатьПредупреждение(,стр);
			КонецЕсли;
		иначе
		КонецЕсли;
	Иначе
		А = Новый Массив();
		А.Добавить("Ошибка: ");
		А.Добавить(Новый ФорматированнаяСтрока(
		СтруктураОтвет.ТекстОшибки,
		Новый Шрифт(,,Истина)));
		Стр = Новый ФорматированнаяСтрока(А);
		ПоказатьПредупреждение(,стр);
	КонецЕсли; 
//рабочий код:

//ProgID = "AcroExch.AVDoc";
//    
//КомОбъект = Новый COMОбъект(ProgID);
//КомОбъект.Open(ФайлПечатнойФормы, "");
//КомОбъект.PrintPages(0, КомОбъект.GetPDDoc().GetNumPages()-1, 3, Истина, Ложь);
//КомОбъект.Close(1);			//Напечатать Файл
			
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Вставить содержимое обработчика
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
КонецПроцедуры
