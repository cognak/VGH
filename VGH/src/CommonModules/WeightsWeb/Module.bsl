
Функция КнопкаВыполнитьНажатие_outSizeX()
	// Вставить содержимое обработчика.
	Возврат Протокол_Антон("outSizeX");
КонецФункции

Функция КнопкаВыполнитьНажатие_outSizeY()
	// Вставить содержимое обработчика.
	Возврат Протокол_Антон("outSizeY");
КонецФункции

Функция КнопкаВыполнитьНажатие_outSizeZ()
	// Вставить содержимое обработчика.
	Возврат Протокол_Антон("outSizeZ");
КонецФункции

Функция КнопкаВыполнитьНажатие_outVaga()
	// Вставить содержимое обработчика.
	Возврат Протокол_Антон("outVaga");
КонецФункции

Функция КнопкаВыполнитьНажатие_outVolume()
	// Вставить содержимое обработчика.
	Возврат Протокол_Антон("outVolume");
КонецФункции

Функция КнопкаВыполнитьНажатие_outVarAll()
	// Вставить содержимое обработчика.
	Возврат Протокол_Антон("outVarAll");
КонецФункции

Функция Протокол_Антон(Знач ПараметрПереданныйПоЗначению)
 
    // изменяем значение только внутри процедуры
    Попытка
		Компонента = Новый COMОбъект("PAntonXP_DLL.PAnton");
		//Сообщить("IndexProtocol=" +  IndexProtocol);
		IndexProtocol = 1;
		// Просиой инкремент индекса протокола
		// IndexProtocol = Компонента.GetIndex(IndexProtocol);
		 // Тест-Пример расчета CRC, не нужен в работе текущей версии драйвера
		 //textcrc = "@I(1)outSizeX?";
		 //CRCrez = Компонента.GetCRC32(textcrc,3);
		 //Сообщить("" +  IndexProtocol + "   crc = " + CRCrez);
		 // Запрос параметров из устройства
		 txtIn = ПараметрПереданныйПоЗначению + "[IP:10.97.99.34]"; // команда параметра запроса, например: "outSizeX";
		 //txtIn = "outSizeX[IP:10.97.99.34]";
		 adrServ = "10.0.2.251";    // IPадресс устройства   10257
		 portServ = "10357";          // Порт UDP устройства
		 portClient = "10257";         // Порт UDP этого компьютера с 1C  10357
		 timeRecvWait_x10ms = 500;   // Время максимального ожидания ответа от устройства (кол-во * 10ms = время ожидания)
		 txtOut = Компонента.GetProtocolAnton(IndexProtocol, txtIn, adrServ, portServ, portClient, timeRecvWait_x10ms);
		 //Сообщить("UDP >> " + txtOut);
	 Исключение
		 ОшибкаПодключения = ОписаниеОшибки();
		 Сообщить( ОшибкаПодключения );
	КонецПопытки;

	Возврат txtOut;
КонецФункции


Функция ПолучитьРазмер(пcommand) Экспорт 
	
	ДанныеСУстройства=Новый Структура;
	//лпосмотреть = КнопкаВыполнитьНажатие_outVarAll();
	//Если пcommand = "outSizeX" Тогда 	
	outSizeX = КнопкаВыполнитьНажатие_outSizeX();
	//Если result Тогда	
	ДанныеСУстройства.Вставить("seat_length",ВыделитьЧислоИзСтрокиОтУстройства(outSizeX)/10);
	//КонецЕсли;	
	//КонецЕсли;
	
	outSizeY = КнопкаВыполнитьНажатие_outSizeY();
	Если outSizeY <> Неопределено Тогда	
		ДанныеСУстройства.Вставить("seat_width",ВыделитьЧислоИзСтрокиОтУстройства(outSizeY)/10);
	КонецЕсли;
	
	outSizeZ = КнопкаВыполнитьНажатие_outSizeZ();
	Если outSizeZ <> Неопределено Тогда
		ДанныеСУстройства.Вставить("seat_height",ВыделитьЧислоИзСтрокиОтУстройства(outSizeZ)/10);
	КонецЕсли;
	
	outVaga = КнопкаВыполнитьНажатие_outVaga();
	ДанныеСУстройства.Вставить("seat_weight",ВыделитьЧислоИзСтрокиОтУстройства(outVaga)/1000);
	 
	outVolume = КнопкаВыполнитьНажатие_outVolume();
	ДанныеСУстройства.Вставить("Объем",ВыделитьЧислоИзСтрокиОтУстройства(outVolume)/1000000);
	
	
	Массив = Новый Массив;
			
	//ЗаполнитьЗначенияСвойств(Структура, Выборка);
			
	Массив.Добавить(ДанныеСУстройства);
		
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(,Символы.Таб));
	
	Попытка
		ЗаписатьJSON(ЗаписьJSON, Массив); 		
	Исключение
		лтекст = ОписаниеОшибки();
	КонецПопытки;
	
	СтрокаJSON = ЗаписьJSON.Закрыть();
	Возврат СтрокаJSON;
	   
КонецФункции 

Функция ВыделитьЧислоИзСтрокиОтУстройства(Строка)
	//пример строки SizeX{12}
	если найти(Строка,"Error") тогда Возврат 0 КонецЕсли;
	МассивПодстрок=СтрРазделить(Строка,"{",);
	строкасчислом=МассивПодстрок[1];
	хх=СтрЗаменить(строкасчислом,"}","" );
	Возврат Число(хх);
КонецФункции