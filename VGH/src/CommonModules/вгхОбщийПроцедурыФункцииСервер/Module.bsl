Функция ПолучитьHTTPСоединение(ПараметрыПодключения,СтруктураОтвета)
	СтруктураАдресСервера =ОбщегоНазначенияКлиентСервер.СтруктураURI(ПараметрыПодключения.HTTPСервер);
	перСервер = СтруктураАдресСервера.Хост;
	перПорт   = ?(ПараметрыПодключения.Свойство("Порт"),ПараметрыПодключения.Порт,0); 
	перПорт1  = СтруктураАдресСервера.Порт; 
	перПользователь =ПараметрыПодключения.ИмяПользователя;
	перПароль =ПараметрыПодключения.Пароль;
	Если ВРег(СтруктураАдресСервера.Схема)="HTTPS" Тогда
		ssl = Новый ЗащищенноеСоединениеOpenSSL(
		Новый СертификатКлиентаWindows(),
		Новый СертификатыУдостоверяющихЦентровWindows());
	Иначе	
		ssl = Неопределено;
	КонецЕсли;
	Попытка		
		Если перПорт <= 0 Тогда 
			HTTPСоединение = Новый HTTPСоединение(перСервер,,перПользователь,перПароль,,,ssl,Ложь);
		Иначе 
			HTTPСоединение = Новый HTTPСоединение(перСервер,,перПользователь,перПароль,,,ssl,Ложь);
		КонецЕсли;	
	Исключение
		СтруктураОтвета.Отработало=Ложь;
		СтруктураОтвета.ТекстОшибки= "Подключение не прошло по причине "+ОписаниеОшибки();
		Сообщить("Подключение не прошло по причине "+ОписаниеОшибки());
		//Подчищаем соединение
		HTTPСоединение = Неопределено;
		Возврат Неопределено;
	КонецПопытки;
	Возврат HTTPСоединение;			
КонецФункции // ()

Процедура ПолучитьРезультатНаСервере(МетодСервиса,вхПараметры,СтруктураОтвета,MP = Ложь) Экспорт //***Д***//MP = Ложь
	
	Если MP Тогда //***Д***//
		Сайт_ПараметрыПодключения=ПланыОбмена.ОбменсМаркетПлейсом.ПолучитьПараметрыАктивногоСайта(); 
	Иначе
		Сайт_ПараметрыПодключения=ПланыОбмена.ОбменсСайтом.ПолучитьПараметрыАктивногоСайта(); //ПолучитьПараметрыподключения("Mangento");
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Сайт_ПараметрыПодключения)Тогда
		СтруктураОтвета.Отработало=Ложь;
		СтруктураОтвета.ТекстОшибки= "Не Смогли получить Параметры подключения к Сайту";
		Возврат;
	КонецЕсли; 
	СтруктураАдресСервера =ОбщегоНазначенияКлиентСервер.СтруктураURI(Сайт_ПараметрыПодключения.HTTPСервер);
	Сайт_ПараметрыПодключения.Вставить("СтруктураАдресСервера",СтруктураАдресСервера);
	HTTPСоединение = ПолучитьHTTPСоединение(Сайт_ПараметрыПодключения,СтруктураОтвета);
	Если HTTPСоединение=Неопределено Тогда
		
		СтруктураОтвета.Отработало=Ложь;
		СтруктураОтвета.ТекстОшибки= "Не Смогли установить подключения к Сайту";
		Возврат;
	КонецЕсли;
	
	Если МетодСервиса = "GET"  Тогда
		//https://dev.ants.co.ua/api/rest/parcel?key=9a23a849787bb1388b8b8fa23f3aa789&order=100925836
		ИмяМетода="";
		Если вхПараметры.Свойство("ИмяМетода",ИмяМетода) Тогда
			перСтруктураЗапроса = "";
			Если ЗначениеЗаполнено(Сайт_ПараметрыПодключения.GUID) Тогда 
				перСтруктураЗапроса = "?key=" + Сайт_ПараметрыПодключения.GUID ;	
			КонецЕсли;                     
			Если ЗначениеЗаполнено(вхПараметры.Order) Тогда
				перСтруктураЗапроса = ?(ПустаяСтрока(перСтруктураЗапроса),
				"?order="+вхПараметры.Order,
				перСтруктураЗапроса+"&order="+вхПараметры.Order);		
			КонецЕсли;
			перРесурсНаСервере=СтруктураАдресСервера.ПутьНаСервере+"parcel"+перСтруктураЗапроса;		
			перРесурсНаСервере=СтруктураАдресСервера.ПутьНаСервере+ИмяМетода+перСтруктураЗапроса;		
			Заголовки = Новый Соответствие();
			Заголовки.Вставить("Content-Type", "application/json");
			HTTPЗапрос = Новый HTTPЗапрос(перРесурсНаСервере,Заголовки);
			
			HTTPОтвет = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
			Если HTTPОтвет.КодСостояния=200 Тогда
				//Получаем ответный текст или текст ошибки
				ТелоОтвета = HTTPОтвет.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
				Попытка
					ЧтениеJSON=Новый ЧтениеJSON; 
					ЧтениеJSON.УстановитьСтроку(ТелоОтвета);
					Результат=ПрочитатьJSON(ЧтениеJSON,,);
					ЧтениеJSON.Закрыть();
					//вернем результат
					СтруктураОтвета.Отработало=Истина;
					СтруктураОтвета.ДанныеОтвета=Результат;
					//Подчищаем соединение
					HTTPСоединение = Неопределено;
					Возврат;
				Исключение
					СтруктураОтвета.Отработало=Ложь;
					СтруктураОтвета.ТекстОшибки= "Не смогли прочитать тело ответа сайта";
					СтруктураОтвета.ДанныеОтвета=ТелоОтвета;
					СтруктураОтвета.КодОтвета= HTTPОтвет.КодСостояния;
					//Подчищаем соединение
					HTTPСоединение = Неопределено;
				КонецПопытки;
			Иначе	
				//ошибка выполнения запроса
				СтруктураОтвета.Отработало=Ложь;
				СтруктураОтвета.ТекстОшибки= "Сайт вернул ответ с кодом: "+HTTPОтвет.КодСостояния;
				СтруктураОтвета.КодОтвета= HTTPОтвет.КодСостояния;
				//Подчищаем соединение
				HTTPСоединение = Неопределено;
				Возврат; 
			КонецЕсли; 
		иначе
			//не задано имяМетода
			СтруктураОтвета.Отработало=Ложь;
			СтруктураОтвета.ТекстОшибки= "Не указано имя метода HTTP Запроса";
			//Подчищаем соединение
			HTTPСоединение = Неопределено;
			Возврат;
		КонецЕсли; // имяМетода
	ИначеЕсли МетодСервиса = "POST" Тогда
		телоЗапроса = вхПараметры.ПараметрыЗапроса;
		телоЗапроса.key=Сайт_ПараметрыПодключения.GUID;
		ТелоЗапросаJSON=вгхОбщиеПроцедурыИФункции.ЗаписатьДанныеВJSON(Неопределено,телоЗапроса);
		
		перРесурсНаСервере=СтруктураАдресСервера.ПутьНаСервере+вхПараметры.ИмяМетода;
		
		Заголовки = Новый Соответствие();
		Заголовки.Вставить("Content-Type", "application/json");
		
		HTTPЗапрос = Новый HTTPЗапрос(перРесурсНаСервере,Заголовки);
		HTTPЗапрос.УстановитьТелоИзСтроки( ТелоЗапросаJSON );
		Попытка
			HTTPОтвет = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
			Если HTTPОтвет.КодСостояния=200 Тогда
				//запрос обработан сайтом
				ТелоОтвета = HTTPОтвет.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
				Если ЗначениеЗаполнено(ТелоОтвета) Тогда
					ЧтениеJSON=Новый ЧтениеJSON; 
					ЧтениеJSON.УстановитьСтроку(ТелоОтвета);
					Результат=ПрочитатьJSON(ЧтениеJSON,,);
					ЧтениеJSON.Закрыть();
					//вернем результат
					СтруктураОтвета.Отработало=Истина;
					СтруктураОтвета.ДанныеОтвета=Результат;
				Иначе
					СтруктураОтвета.Отработало=Ложь;
					СтруктураОтвета.ТекстОшибки= "Сайт вернул пустое тело ответа";
					//Подчищаем соединение
					HTTPСоединение = Неопределено;
					Возврат;
				КонецЕсли; 
			Иначе	
				//ошибка выполнения запроса
				СтруктураОтвета.Отработало=Ложь;
				СтруктураОтвета.ТекстОшибки= "Сайт вернул ответ с кодом: "+HTTPОтвет.КодСостояния;
				СтруктураОтвета.КодОтвета= HTTPОтвет.КодСостояния;
				//Подчищаем соединение
				HTTPСоединение = Неопределено;
				Возврат ;
			КонецЕсли;
		Исключение
			СтруктураОтвета.Отработало=Ложь;
			хх=ОписаниеОшибки();
			СтруктураОтвета.ТекстОшибки= "Не удачная попытка отправить запрос на сайт по причине: "+Символы.ПС+хх;
			//Подчищаем соединение
			HTTPСоединение = Неопределено;
			Возврат;
		КонецПопытки;
	КонецЕсли;
	//Подчищаем соединение
	HTTPСоединение = Неопределено;
КонецПроцедуры

Процедура СохранимПолученныйНомерВДокументе(ДокСсылка,НомерНакладной)    экспорт

докОбъект=ДокСсылка.ПолучитьОбъект();
докОбъект.НомерТТН=НомерНакладной;
докОбъект.Записать(РежимЗаписиДокумента.Проведение);
	

КонецПроцедуры
Функция ПолучитьПараметрыПодключения(Наименование=Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПодключаемоеОборудование.Ссылка КАК Ссылка,
	               |	ПодключаемоеОборудование.Наименование КАК Наименование,
	               |	ПодключаемоеОборудование.adrServ КАК adrServ,
	               |	ПодключаемоеОборудование.portServ КАК portServ,
	               |	ПодключаемоеОборудование.adrClient КАК adrClient,
	               |	ПодключаемоеОборудование.portClient КАК portClient,
	               |	ПодключаемоеОборудование.timeRecvWait_x10ms КАК timeRecvWait_x10ms,
	               |	ПодключаемоеОборудование.GUID КАК GUID,
	               |	ПодключаемоеОборудование.HTTPСервер КАК HTTPСервер,
	               |	ПодключаемоеОборудование.Порт КАК Порт,
	               |	ПодключаемоеОборудование.ИмяПользователя КАК ИмяПользователя,
	               |	ПодключаемоеОборудование.Пароль КАК Пароль,
	               |	ПодключаемоеОборудование.ИмяПритераЭтикеток КАК ИмяПритераЭтикеток,
	               |	ПодключаемоеОборудование.ИмяПринтераДокументов КАК ИмяПринтераДокументов
	               |ИЗ
	               |	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	               |ГДЕ
	               |	ПодключаемоеОборудование.ПоУмолчанию";
	
	//Запрос.УстановитьПараметр("", );
	
	Результат = Запрос.Выполнить();
	Возврат вгОбщегоНазначения.РезультатЗапросаВСтруктуру(Результат);
	
КонецФункции
Функция ПолучитьДанныеНаСервере(Ссылка)  экспорт
	//мОбъект=Форма.РеквизитФормыВЗначение("Объект");
	мОбъект=Ссылка.ПолучитьОбъект();
	мДанные = Новый Массив();
	ТелоСтруктура=Новый Структура("key,order,data",,СокрЛП(мОбъект.order));
	МассивВГХ=Новый Массив;
	//мм=ОбщегоНазначенияКлиентСервер.ТаблицаЗначенийВМассив(мОбъект.ГрузовыеМеста);
	тз= мОбъект.ГрузовыеМеста.Выгрузить(,"seat_width,seat_height,seat_length,seat_weight,Объем");
	
	мДанные=ОбщегоНазначения.ТаблицаЗначенийВМассив(тз);
	Возврат мданные;
	
КонецФункции // ()
Функция ПолучитьФайлССервера(ФайлНаВебСервере, MP = ложь, УникальныйИдентификатор, пЭтоВеб = Ложь) Экспорт
	
	ВремКаталог = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ВремКаталог);
	
	ПараметрыПолученияФайлов = Новый Структура;
	
	ПараметрыПолучения = Новый Структура("ИмяФайла");
	ПараметрыПолучения.Вставить("ИмяФайла", ВремКаталог);
	Если MP Тогда //***ДН***//
		Сайт_ПараметрыПодключения=ПланыОбмена.ОбменсМаркетПлейсом.ПолучитьПараметрыАктивногоСайта();  //ПолучитьПараметрыподключения();
	Иначе
		Сайт_ПараметрыПодключения=ПланыОбмена.ОбменсСайтом.ПолучитьПараметрыАктивногоСайта();  //ПолучитьПараметрыподключения();
	КонецЕсли;
	
    Если Сайт_ПараметрыПодключения=Неопределено Тогда
    	Возврат Ложь;
    КонецЕсли; 
	URLРазделенный 		  = РазделитьURL(ФайлНаВебСервере);
    СтруктураАдресСервера = ОбщегоНазначенияКлиентСервер.СтруктураURI(Сайт_ПараметрыПодключения.HTTPСервер);
    перСервер 			  = СтруктураАдресСервера.Хост;
    перПорт   			  = Сайт_ПараметрыПодключения.Порт; 
	//перПорт1  = СтруктураАдресСервера.Порт; 
    перПользователь 	  = Сайт_ПараметрыПодключения.ИмяПользователя;
    перПароль 			  = Сайт_ПараметрыПодключения.Пароль;
	
	Если ВРег(СтруктураАдресСервера.Схема)="HTTPS" Тогда
    	ssl = Новый ЗащищенноеСоединениеOpenSSL(
    	Новый СертификатКлиентаWindows(),
    	Новый СертификатыУдостоверяющихЦентровWindows());
    Иначе	
    	ssl = Неопределено;
    КонецЕсли;
	
	Попытка		
    	Если перПорт <= 0 Тогда 
    		HTTPСоединение = Новый HTTPСоединение(перСервер,,перПользователь,перПароль,,,ssl,Ложь);
    	Иначе 
    		HTTPСоединение = Новый HTTPСоединение(перСервер,,перПользователь,перПароль,,,ssl,Ложь);
    	КонецЕсли;	
    Исключение
    	//Подчищаем соединение
    	HTTPСоединение = Неопределено;
    	Возврат ложь;
	КонецПопытки;
	//ПутьКФайлуНаСервере=СтруктураАдресСервера.Путь;
	ИмяСервера = URLРазделенный.ИмяСервера;
	ПутьКФайлуНаСервере = URLРазделенный.ПутьКФайлуНаСервере;
	Протокол = URLРазделенный.Протокол;
	Заголовки = Новый Соответствие;
	СписокФайлов = новый Массив;
	
	
	ИмяФайла = ВремКаталог + "\temp.pdf";
	
	HTTPОтвет = ПолучитьHTTPОтвет(ПутьКФайлуНаСервере, ИмяФайла, HTTPСоединение, Заголовки);
	
	Если HTTPОтвет.КодСостояния < 200 Или HTTPОтвет.КодСостояния >= 300 Тогда
		HTTPСоединение = Неопределено;
		ФайлОтвета = Новый ЧтениеТекста(ВремКаталог + "\temp.pdf", КодировкаТекста.UTF8);
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ИзвлечьТекстИзHTML(ФайлОтвета.Прочитать(5 * 1024));
	КонецЕсли;
	HTTPСоединение = Неопределено;
	
	//Криворучко //передадим файл на клиент
	Если пЭтоВеб Тогда   	
		Возврат ИмяФайла;	
	КонецЕсли;
	мфайл = Новый ДвоичныеДанные(ИмяФайла);

	Адрес = ПоместитьВоВременноеХранилище(мфайл);
		
	//Возврат ИмяФайла;
	Возврат Адрес;

	
КонецФункции // ПолучитьФайлССервера()

Функция ПолучитьHTTPОтвет(ПутьКФайлуНаСервере, ИмяФайла, Соединение, Заголовки, флаг = Истина)
	
	HTTPЗапрос = Новый HTTPЗапрос(ПутьКФайлуНаСервере, Заголовки);
	HTTPЗапрос.Заголовки.Вставить("Accept-Charset", "utf-8");
	HTTPОтвет = Соединение.Получить(HTTPЗапрос, ИмяФайла);
	
	Если HTTPОтвет.КодСостояния = 301 или HTTPОтвет.КодСостояния = 302 Тогда
		ПутьКФайлуНаСервере = HTTPОтвет.Заголовки["Location"];
		URLРазделенный = РазделитьURL(ПутьКФайлуНаСервере);
		ПутьКФайлуНаСервере = URLРазделенный.ПутьКФайлуНаСервере;
		HTTPОтвет = ПолучитьHTTPОтвет(ПутьКФайлуНаСервере, ИмяФайла, Соединение, Заголовки, Флаг);
	КонецЕсли;
	
	файл = Новый Файл(ИмяФайла);
	
	Если флаг и HTTPОтвет.КодСостояния >= 200 и HTTPОтвет.КодСостояния <= 299 Тогда флаг = Ложь; ИмяФайлаВр = ПутьКФайлуНаСервере; Пока Найти(ИмяФайлаВр,"/") > 0 цикл
		ИмяФайлаВр = Сред(ИмяФайлаВр,Найти(ИмяФайлаВр,"/")+1);
	КонецЦикла;
	Если НЕ ПустаяСтрока(ИмяФайлаВр) Тогда
		ПереместитьФайл(ИмяФайла, файл.Путь + ИмяФайлаВр);
		ИмяФайла = файл.Путь + ИмяФайлаВр;
	КонецЕсли;
КонецЕсли;

Возврат HTTPОтвет;

КонецФункции


Функция РазделитьURL(Знач URL) Экспорт
	
	СтруктураURL = СтруктураURI(URL);
	
	Результат = Новый Структура;
	Результат.Вставить("Протокол", ?(ПустаяСтрока(СтруктураURL.Схема), "http", СтруктураURL.Схема));
	Результат.Вставить("ИмяСервера", СтруктураURL.ИмяСервера);
	Результат.Вставить("ПутьКФайлуНаСервере", СтруктураURL.ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции
Функция СтруктураURI(Знач СтрокаURI) Экспорт
	
	СтрокаURI = СокрЛП(СтрокаURI);
	
	// схема
	Схема = "";
	Позиция = Найти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;
	
	// Строка соединения и путь на сервере.
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = Найти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
	
	// Информация пользователя и имя сервера.
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = Найти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = Найти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = Найти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(ПустаяСтрока(Порт), Неопределено, Число(Порт)));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции
