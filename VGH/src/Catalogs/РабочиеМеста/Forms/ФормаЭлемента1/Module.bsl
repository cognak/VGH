#Область ОписаниеПеременных

&НаКлиенте
Перем ОтветПередЗаписью;

#КонецОбласти

#Область ОбработчикиСобытийФорм

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда     
		Возврат;
	КонецЕсли;

	ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();

	#Если Не ВебКлиент Тогда
	Объект.ИмяКомпьютера = ИмяКомпьютера();
	
	#КонецЕсли
	
	Элементы.Оборудование.Доступность = ЗначениеЗаполнено(Объект.Ссылка); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПустаяСтрока(Объект.Код) Тогда
		СистемнаяИнформация = Новый СистемнаяИнформация();
		Объект.Код = ВРег(СистемнаяИнформация.ИдентификаторКлиента);
	КонецЕсли;
	МассивИменПринтеров=ПолучитьСписокПринтеров();
	Элементы.ИмяПринтераЭтикеток.СписокВыбора.ЗагрузитьЗначения(МассивИменПринтеров);
	Элементы.ИмяПринтераДокументов.СписокВыбора.ЗагрузитьЗначения(МассивИменПринтеров);
	
	МенеджерОборудованияКлиентСервер.ЗаполнитьНаименованиеРабочегоМеста(Объект, ТекущийПользователь);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Место = ТекущийОбъект.Ссылка;
	
	СписокУстройств = МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам( , , Место);
	Для Каждого Элемент Из СписокУстройств Цикл
		Если Элемент.РабочееМесто = Место Тогда
			ЛокальноеОборудование.Добавить(Элемент.Ссылка,Элемент.Наименование, Ложь, ПолучитьКартинку(Элемент.ТипОборудования, 16));
		КонецЕсли;
	КонецЦикла
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ПроверкаУникальностиПоИдентификаторуКлиента()Тогда
		Отказ = Истина;
		Текст = НСтр("ru='Ошибка сохранение рабочего места.
					|Рабочее место с таким идентификатором клиента уже существует.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
		Возврат;
	КонецЕсли;
	
	Если Не ПроверкаУникальностиПоНаименованию()Тогда
		Если ОтветПередЗаписью <> Истина Тогда
			Отказ = Истина;
			Текст = НСтр("ru='Указано неуникальное наименование рабочего места.
						|Возможно в дальнейшем это затруднит идентификацию и выбор рабочего места.
						|Рекомендуется указывать уникальное наименование рабочих мест.
						|Продолжить сохранение с указанным наименованием?'");
			Оповещение = Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, Текст, РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОтветПередЗаписью = Истина;
		Записать();
	КонецЕсли;  
	
КонецПроцедуры 
   
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	
	Если Объект.Код = ВРег(СистемнаяИнформация.ИдентификаторКлиента) Тогда
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	МенеджерОборудованияКлиентСервер.ЗаполнитьНаименованиеРабочегоМеста(Объект, ТекущийПользователь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПроверкаУникальностиПоНаименованию()
	
	Результат = Истина;
	
	Если Не ПустаяСтрока(Объект.Наименование) Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|    1
		|ИЗ
		|    Справочник.РабочиеМеста КАК РабочиеМеста
		|ГДЕ
		|    РабочиеМеста.Наименование = &Наименование
		|    И РабочиеМеста.Ссылка <> &Ссылка
		|");
		Запрос.УстановитьПараметр("Наименование", Объект.Наименование);
		Запрос.УстановитьПараметр("Ссылка"      , Объект.Ссылка);
		Результат = Запрос.Выполнить().Пустой();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПроверкаУникальностиПоИдентификаторуКлиента()
	
	Результат = Истина;
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ИдентификаторКлиента = ВРег(СистемнаяИнформация.ИдентификаторКлиента);
	
	Если Не ПустаяСтрока(Объект.Код) Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|    1
		|ИЗ
		|    Справочник.РабочиеМеста КАК РабочиеМеста
		|ГДЕ
		|    РабочиеМеста.Код = &Код
		|    И РабочиеМеста.Ссылка <> &Ссылка
		|");
		Запрос.УстановитьПараметр("Код"    , ИдентификаторКлиента);
		Запрос.УстановитьПараметр("Ссылка" , Объект.Ссылка);
		Результат = Запрос.Выполнить().Пустой();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьКартинку(ТипОборудования, Размер)
	
	Попытка // Может прийти пустая ссылка или неопределено, может не быть картинки.
		МетаОбъект  = ТипОборудования.Метаданные();
		Индекс      = Перечисления.ТипыПодключаемогоОборудования.Индекс(ТипОборудования);
		ИмяКартинки = МетаОбъект.ЗначенияПеречисления[Индекс].Имя;
		ИмяКартинки = "ПодключаемоеОборудование" + ИмяКартинки + Размер;
		Картинка = БиблиотекаКартинок[ИмяКартинки]
	Исключение
		Картинка = Неопределено;
	КонецПопытки;
	
	Возврат Картинка;
	
КонецФункции
&НаКлиенте
Функция ПолучитьСписокПринтеров() Экспорт
	
	WScriptNetwork = Новый COMОбъект("WScript.Network");
	МассивИменПринтеров = Новый Массив;
	Printers = WScriptNetwork.EnumPrinterConnections ();
	КоличествоПринтеров = Printers.length - 1;
		
	Для Номер = 0 По КоличествоПринтеров Цикл
		
		ТекСтруктура = Новый Структура("Порт, Имя");
		ТекСтруктура.Порт = Printers.Item(Номер);
		Номер = Номер + 1;
		ТекСтруктура.Имя = Printers.Item(Номер);
		МассивИменПринтеров.Добавить(Printers.Item(Номер));
		//МассивПринтеров.Добавить(ТекСтруктура);
		
	КонецЦикла;
	Возврат МассивИменПринтеров;
	
КонецФункции 


&НаКлиенте
Процедура ИмяПринтераДокументовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры
&НаКлиенте
Процедура НачалоВыбораИмяПринтераЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Элемент=ДополнительныеПараметры.Элемент;
	ИмяЭлемента=Элемент.Имя;
	Если НЕ ВыбранныйЭлемент = Неопределено Тогда
		Объект.ИмяПринтераДокументов = ВыбранныйЭлемент.Значение;
		//СохранитьЗначениеВыбора(ВыбранныйЭлемент.Значение);

		//Элементы[ИмяЭлемента] = ВыбранныйЭлемент.Значение;
	КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура СохранитьЗначениеВыбора(Значение)
	мОбъект=РеквизитФормыВЗначение("Объект");
	мОбъект.ИмяПринтераЭтикеток=Значение;
	ЗначениеВРеквизитФормы(мОбъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура ИмяПринтераЭтикетокНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Функция ПолучитьАйПи()
	//Функция ПолучитьIPАдрес()
 
	strComputer = ".";
	SWBemlocator = Новый COMОбъект("WbemScripting.SWbemLocator");
	objWMIService = SWBemlocator.ConnectServer(strComputer, "root\CIMV2");
	IPConfigSet = objWMIService.ExecQuery("Select IPAddress from Win32_NetworkAdapterConfiguration where ipenabled = true");
 
	Для Каждого Конфигурация Из IPConfigSet Цикл
		Для Каждого СтрПараметр Из Конфигурация.IPAddress Цикл 
			Возврат СтрПараметр;
		КонецЦикла;
	КонецЦикла;
 
КонецФункции

&НаКлиенте
Процедура ПолучитьАйПи1(Команда)
	// Вставить содержимое обработчика.
	Объект.АйПиАдрес= ПолучитьАйПи();
КонецПроцедуры

#КонецОбласти